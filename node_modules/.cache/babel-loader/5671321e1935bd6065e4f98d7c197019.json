{"ast":null,"code":"export default {\n  name: 'Buy',\n  props: ['item_id'],\n\n  data() {\n    return {\n      infos: [],\n      amount: '',\n      showPayment: false,\n      showBuy: true,\n      bRate: 10,\n      idd: '',\n      asset: '',\n      need: '',\n      errormsg: ''\n    };\n  },\n\n  mounted: function () {\n    this.getItem_id();\n  },\n  methods: {\n    getItem_id() {\n      axios.get('http://127.0.0.1/rapidnote/api/rateById/2').then(response => this.infos = response.data).catch(error => {\n        this.errormsg = 'Une erreur est survenue';\n      }); //   console.log(item_id);\n    },\n\n    displayPayment() {\n      this.showBuy = false;\n      this.showPayment = true;\n    },\n\n    getNeed(amount, bRate) {\n      this.need = amount * bRate;\n    },\n\n    getAmount(need, bRate) {\n      this.amount = need / bRate;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0HG,eAAe;EACXA,IAAI,EAAE,KADK;EAEXC,KAAK,EAAE,CAAC,SAAD,CAFI;;EAGbC,IAAI,GAAE;IACJ,OAAM;MACFC,KAAK,EAAC,EADJ;MAEFC,MAAM,EAAE,EAFN;MAGFC,WAAW,EAAE,KAHX;MAIFC,OAAO,EAAE,IAJP;MAKFC,KAAK,EAAE,EALL;MAMFC,GAAG,EAAE,EANH;MAOFC,KAAK,EAAE,EAPL;MAQFC,IAAI,EAAE,EARJ;MASFC,QAAQ,EAAC;IATP,CAAN;EAWD,CAfY;;EAgBbC,OAAO,EAAE,YAAU;IACf,KAAKC,UAAL;EACH,CAlBY;EAmBbC,OAAO,EAAC;IACPD,UAAU,GAAE;MACVE,KAAK,CAACC,GAAN,CAAU,2CAAV,EAAuDC,IAAvD,CACYC,QAAO,IACP,KAAKf,KAAL,GAAae,QAAQ,CAAChB,IAFlC,EAGaiB,KAHb,CAGmBC,KAAI,IAAK;QACd,KAAKT,QAAL,GAAgB,yBAAhB;MACD,CALb,EADU,CAOD;IAEV,CAVM;;IAWLU,cAAc,GAAE;MACZ,KAAKf,OAAL,GAAe,KAAf;MACA,KAAKD,WAAL,GAAmB,IAAnB;IACH,CAdI;;IAeLiB,OAAO,CAAClB,MAAD,EAASG,KAAT,EAAgB;MACf,KAAKG,IAAL,GAAYN,MAAK,GAAIG,KAArB;IACH,CAjBA;;IAkBLgB,SAAS,CAACb,IAAD,EAAOH,KAAP,EAAc;MACf,KAAKH,MAAL,GAAcM,IAAG,GAAIH,KAArB;IACJ;;EApBC;AAnBK,CAAf","names":["name","props","data","infos","amount","showPayment","showBuy","bRate","idd","asset","need","errormsg","mounted","getItem_id","methods","axios","get","then","response","catch","error","displayPayment","getNeed","getAmount"],"sourceRoot":"","sources":["/opt/lampp/htdocs/rapidnote/src/components/Buy.vue"],"sourcesContent":["<template> <br><br><br><br>\n    <form method=\"POST\"\n        action=\"\" class='form' v-if=\"showBuy\" >\n\n        <div class=\"form__close\">\n           <a href=\"/dashboard\">\n               back\n               <i class=\"fas fa-times\"></i>\n           </a> <br>\n        </div>\n        <h1 class=\"form__title\">\n           Buy {{ item_id}}\n        </h1>\n\n        <div class=\"details\">\n<!--\n          <label for=\"Mr\" @click='btc()'>\n                        <input type=\"radio\" class='sm' id=\"genderChoice1\" name=\"gender\" value=\"Mr\" required>\n                        <img src=\"../../public/images/btc.png\" alt=\"\">\n                        <p>BTC</p>\n                    </label>\n\n                    <label for=\"Mr\" @click='pf()'>\n                        <input type=\"radio\" id=\"genderChoice1\" class=\"sm\" name=\"gender\" value=\"Mr\" required>\n                        <p>\n                          Perfect Money\n                        </p>\n                    </label>-->\n        </div>\n\n        <label for=\"\">\n          Buying Rate: <br>\n          <ul >\n              <li v-for=\"info in infos\" :key=\"info.id\">{{info.id }}</li>\n          </ul>\n        </label>\n\n        <label for=\"\">\n           Amount you need: <br>\n            <input type=\"number\" v-model=\"amount\"\n              @click=\"getNeed(amount, bRate)\"\n             class=\"blue\">\n            <div class=\"currency\">\n              $\n            </div>\n\n            <img src=\"../../public/img/visa.png\" alt=\"\" class=\"flag\">\n        </label>\n\n        <label for=\"\">\n            Amount you pay <br>\n            <input type=\"number\" v-model=\"need\" class=\"blue\"\n            @click=\"getAmount(need, bRate)\"\n            placeholder=\"\"\n            >\n            <div class=\"currency\">\n              â‚µ\n            </div>\n            <img src=\"../../public/img/visa.png\" alt=\"\" class=\"flag\">\n        </label>\n\n        <label for=\"\">\n          Your bitcoin adress: <br>\n          <input type=\"number\"  class=\"blue\"\n            placeholder=\"\"\n            >\n        </label>\n\n            <div class=\"link\" @click=\"displayPayment()\">\n                Proceed\n            </div>\n\n   </form>\n\n   <form  v-if=\"showPayment\" class=\"form\">\n\n        <div class=\"form__close\">\n            back\n               <i class=\"fas fa-times\" @click=\"displayBuy()\"></i>\n           |\n           <a href=\"/dashboard\">\n              Close\n               <i class=\"fas fa-times\"></i>\n           </a> <br>\n        </div>\n        <h1 class=\"form__title\">\n          Payment Methods\n        </h1>\n\n        <div class=\"form__items\">\n          <div class=\"form__items__item\">\n            <img src=\"../../public/img/img-mtn.png\" alt=\"\">\n            <p>\n              MTN\n            </p>\n          </div>\n\n          <div class=\"form__items__item\">\n            <img src=\"../../public/img/paypal-rond.png\" alt=\"\">\n            <p>PAYPAL</p>\n          </div>\n\n          <div class=\"form__items__item\">\n            <img src=\"../../public/img/btc.png\" alt=\"\">\n            <p>BTC</p>\n          </div>\n        </div>\n\n\n\n\n        <label for=\"\">\n            <button type=\"submit\"  class=\"link\">\n                Next\n            </button>\n        </label>\n\n   </form>\n</template>\n\n\n<script>\n   export default {\n       name: 'Buy',\n       props: ['item_id'],\n     data(){\n       return{\n           infos:[],\n           amount: '',\n           showPayment: false,\n           showBuy: true,\n           bRate: 10,\n           idd: '',\n           asset: '',\n           need: '',\n           errormsg:''\n       }\n     },\n     mounted: function(){\n         this.getItem_id();\n     },\n     methods:{\n      getItem_id(){\n        axios.get('http://127.0.0.1/rapidnote/api/rateById/2').then(\n                    response =>\n                    this.infos = response.data)\n                    .catch(error => {\n                      this.errormsg = 'Une erreur est survenue'\n                    }) ;\n                 //   console.log(item_id);\n\n      },\n        displayPayment(){\n            this.showBuy = false;\n            this.showPayment = true;\n        },\n        getNeed(amount, bRate) {\n                this.need = amount * bRate;\n            },\n        getAmount(need, bRate) {\n                this.amount = need / bRate;\n            }\n        }\n\n     }\n   </script>\n\n   <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n   <style scoped>\n\n   </style>"]},"metadata":{},"sourceType":"module"}